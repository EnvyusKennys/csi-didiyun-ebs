name: csi-didiyun-ebs

on:
  push:
    branches: [ master ]
    tags: [ "v**" ]
  pull_request:
    branches: [ master ]

jobs:
  test-and-coverage:
    name: test and coverage
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Calc coverage 
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin   
        go test -v -covermode=count -coverprofile=coverage.out ./...
    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1.0.0
      with:
          infile: coverage.out
          outfile: coverage.lcov
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  build-image:
    runs-on: ubuntu-latest
    name: build docker image
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - id: image_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: supremind/csi-didiyun-ebs # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag

      - name: build driver
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: Dockerfile
          push: true
          tags: ${{ steps.image_meta.outputs.tags }}
          labels: ${{ steps.image_meta.outputs.labels }}
